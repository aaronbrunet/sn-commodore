<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function(spUtil,$rootScope,$scope) {
  /* widget controller */
  var c = this;
  
  //c.createWidget = function(value){
	  spUtil.get("cc-beverage-list",{
		  limit:3,
		  event:c.data.event,
		  title:'Cast Your Vote!',
		  subtitle:'Select any Cellar Treasure to cast or change your vote.',
		  click_action:'vote',
		  voted: c.data.vote.sys_id,
		  buttons: c.data.buttons
		  }).then(function(response){
			c.bevListWidget = response;
		});
		//console.log('broadcasting ID '+value);
		//$rootScope.$emit('cat_item_id',value);
	//};
	//c.createWidget();

	$rootScope.$on('clicked_beverage', function(event,parms) {
		console.log('Receiving clicked bev');
		// 	$scope.data.action = 'cat_item';
		// 	$scope.data.event_id = parms;
		$scope.data.bev_id = parms;
			spUtil.update($scope).then(function(e){	
		});
			//console.log(parms);
	});

};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>CC Bev List Voting Wrapper</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
  var user = gs.getUserID();
  data.event = '';
  
	if($sp.getParameter('id') == 'live_event' || $sp.getParameter('id') == 'event'){
		data.event = $sp.getParameter('sys_id');
  	}

	data.buttons = [
				{	cancel: true,
					label: 'Cancel'
				},{
					primary: true,
					label: 'Cast My Vote!'
			}];

	var attendanceRecord = new x_snc_commodore_0.CCUtils().getMyRSVPRecord(user,data.event).sys_id.toString();
	var voteRecord = new x_snc_commodore_0.CCUtils().getMyVote(user,attendanceRecord);
	var voteID = voteRecord.getValue('sys_id');
	if(!voteID){ voteID = voteRecord.sys_id.toString();}
	if(voteID && voteID !=''){
		data.vote = {
			name: voteRecord.beverage.name.toString(),
			sys_id: voteID
		};
		if(voteRecord.event_attendances.event.drink_names_hidden){
			data.vote.name = voteRecord.beverage.masked_name.toString();
		}
	}

	if(input){
		var bev_id = input.bev_id;
		
		var vote = new GlideRecord('x_snc_commodore_0_votes');
		if(vote.canWrite()){
			if(voteID && voteID !=''){
				vote.addQuery('sys_id',voteID);
				vote.query();
				if(vote.next()){
					vote.beverage = bev_id;
					vote.update();
				}
			} else {
				//console.log([user,attendanceRecord,voteRecord]);
				vote.initialize();
				vote.setValue('user',user);
				vote.setValue('event_attendances',attendanceRecord+'');
				vote.setValue('beverage',bev_id+'');				
				vote.insert();
			}
		}
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2023-04-10 01:16:01</sys_created_on>
        <sys_id>1ff535a687caa5104c1fc99d0ebb355d</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>CC Bev List Voting Wrapper</sys_name>
        <sys_package display_value="Commodore's Club" source="x_snc_commodore_0">7f31176e87a021106e4b11f83cbb358d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Commodore's Club">7f31176e87a021106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sp_widget_1ff535a687caa5104c1fc99d0ebb355d</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2023-04-10 12:47:17</sys_updated_on>
        <template><![CDATA[<div class="bev-list-wrapper">
  <sp-widget widget="c.bevListWidget"/>  
</div>
<div ng-if="data.vote"><p>You voted for {{data.vote.name}}</p></div>]]></template>
    </sp_widget>
</record_update>
