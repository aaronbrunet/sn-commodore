<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,$timeout,$interval,spUtil) {
  /* widget controller */
	var c = this;
	var data = $scope.data;
	// $scope.refreshLive = function(){
		
		var refresh;
		if($scope.data.voting_open){
			
			refresh = $interval(function(){
				console.log("Refresh")
				console.log($scope.data.voting_open);
				if($scope.data.voting_open){
					spUtil.update($scope);
				}
				else {
					$interval.cancel(refresh);
				}
			}, 10000);
		} else {
			$interval.cancel(refresh);
		}
	// }
};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cc-event-voting</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>CC Event Voting</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

var event = new GlideRecord('x_snc_commodore_0_events');
event.get('607174fe87a021106e4b11f83cbb351f');
data.voting_open = event.getValue('voting_open') == 1;
var attendees = [];
var getAttendees = new GlideRecord('x_snc_commodore_0_club_event_attendances');
getAttendees.addQuery("event",event.sys_id);
getAttendees.query();
while(getAttendees.next()){
	var aObj = {};
	$sp.getRecordElements(aObj, getAttendees, 'user');
	aObj.sys_id = getAttendees.getValue('sys_id');
	attendees.push(aObj);
}

var b_list = event.drinks.toString();
console.log(b_list);
var beverages = [];
var getBev = new GlideRecord('x_snc_commodore_0_beverage');
getBev.addEncodedQuery('sys_idIN'+b_list);
getBev.query();
while(getBev.next()){

	var bObj = {};
	$sp.getRecordElements(bObj, getBev, 'name,masked_name');
	bObj.sys_id = getBev.getValue('sys_id');
	beverages.push(bObj);
}
//console.log(beverages);

var votes = [];
var getVotes = new GlideRecord('x_snc_commodore_0_votes');
getVotes.addQuery('event_attendances.event',event.sys_id);
getVotes.query();
data.vote_count = getVotes.getRowCount();
while(getVotes.next()){
	var vObj = {};
	$sp.getRecordElements(vObj, getVotes, 'vote,user,beverage');
	vObj.beverage.masked_name = getVotes.beverage.masked_name.getDisplayValue(); 
	vObj.sys_id = getVotes.getValue('sys_id');
	votes.push(vObj);
}
console.log(JSON.stringify(votes));

data.attendees = attendees;
data.beverages = beverages;
data.votes = votes;


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2023-01-26 16:09:09</sys_created_on>
        <sys_id>268d3fbe87e821106e4b11f83cbb35e6</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>CC Event Voting</sys_name>
        <sys_package display_value="Commodore's Club" source="x_snc_commodore_0">7f31176e87a021106e4b11f83cbb358d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Commodore's Club">7f31176e87a021106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sp_widget_268d3fbe87e821106e4b11f83cbb35e6</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2023-01-26 20:58:23</sys_updated_on>
        <template><![CDATA[<div>
<h1>Hello World</h1>
  <div>
    <h2>Event Reference Info</h2>
  </div>
  <div>
    <!--<button ng-click="refreshLive()">Refresh Live</button>-->
 	Voting open: {{data.voting_open}}
    <input type="checkbox" ng-model="data.voting_open"/>
  </div>
  <div>
    <h3>Attendees</h3>
    <div ng-repeat="a in data.attendees">
    	{{a.user.display_value}}
    </div>
  </div>
    <div>
    <h3>Beverages</h3>
    <div ng-repeat="b in data.beverages">
    	Drink: {{b.masked_name.display_value}}
    	Actual Name: {{b.name.display_value}}
    </div>
  </div>
  <div>
    <h3>Voting list</h3>
    Votes:{{data.vote_count}}
	<div ng-repeat="v in data.votes">
    	User: {{v.user.display_value}}
    	Beverage: {{v.beverage.masked_name}}
      
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
