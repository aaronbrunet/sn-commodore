<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,$timeout,$interval,spUtil) {
  /* widget controller */
	var c = this;
	var data = $scope.data;
	var ea_str = "event_attendances.event="+data.event_id;
	//console.log(ea_str);
	spUtil.recordWatch($scope, "x_snc_commodore_0_votes", ea_str, function(name) {
		//console.log(name.data.operation); 
		//console.log(name); 
		spUtil.update($scope);
		$scope.server.update();
    });

	$scope.refresh = function(){
		spUtil.update($scope);
	};

	$scope.votesToWidth = function(curr,total){
		var style_str = 'background:linear-gradient(90deg, rgba(226,177,82,1) '+((curr / total ) * 100)+'%, rgba(255,255,255,1));';
		//console.log(style_str);
		//return (curr / total ) * 100;
		return style_str;
	};

	$scope.toggleAction = function (action) {
		$scope.data.action = action;
		spUtil.update($scope).then(function() {
			$scope.data.action = undefined;
			$scope.server.update();
		});
	};
};]]></client_script>
        <controller_as>c</controller_as>
        <css>i {&#13;
    vertical-align: bottom;&#13;
}&#13;
&#13;
.cc-vote-panel {&#13;
	height: 40rem;&#13;
  	overflow-y: auto;&#13;
  	background: $cc-grey-light;&#13;
  border-radius: 2rem;&#13;
  	display: flex;&#13;
    flex-direction: column;&#13;
    padding: 2rem;&#13;
}&#13;
&#13;
.cc-vote-item {&#13;
	background: white;&#13;
    &#13;
  	outline: 2px solid $cc-gold;&#13;
  	border-radius: 2rem;&#13;
    display: flex;&#13;
    flex-direction: row;&#13;
    margin: 2rem;&#13;
    padding: 2rem;&#13;
  	justify-content: space-between;&#13;
  	align-items: center;&#13;
}&#13;
&#13;
.cc-vote-item-left {&#13;
	flex-direction: column;&#13;
    display: flex;&#13;
    flex-grow: 1;&#13;
}&#13;
&#13;
.cc-vote-item-right {&#13;
  	h3 {background: $cc-gold;&#13;
    height: 3rem;&#13;
    width: 3rem;&#13;
    border-radius: 100%;&#13;
    align-items: center;&#13;
    display: flex;&#13;
    justify-content: center;&#13;
  &#13;
    color:white;&#13;
    margin: 0;&#13;
  }&#13;
}&#13;
&#13;
.title-row {&#13;
  h3 {&#13;
  	margin: 2rem 0;&#13;
  }&#13;
	display: flex; &#13;
  flex-direction: row;&#13;
  justify-content: space-between;&#13;
  align-items: center;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cc-event-voting</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>CC Event Voting</name>
        <option_schema/>
        <public>false</public>
        <roles>x_snc_commodore_0.cc_user</roles>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
function getTime(){
	console.log('Calculating new timestamp');
	var gd = new GlideDate();
	var gdt = gd.getNumericValue() - gd.getTZOffset();
	return new Date(gdt);
}

if ($sp.getParameter('id')=='live_event' && $sp.getParameter('sys_id')!=''){		
		data.event_id = $sp.getParameter('sys_id');		
}
var constants = new x_snc_commodore_0.CCUtils().getConstants();
var event = new GlideRecord('x_snc_commodore_0_events');
event.get(data.event_id);
data.auth = gs.hasRole('x_snc_commodore_0.cc_founder');
data.voting_open = event.getValue('voting_open') == 1;
data.drink_names_hidden = event.getValue('drink_names_hidden') == 1;

data.refreshed = getTime();
data.vote_href = '/cc?id=sc_cat_item&sys_id='+constants.CAT_ITEM_VOTE+'&event_id='+data.event_id;
data.vote_msg = 'VOTE!';
data.state = event.getValue('state');
data.live = data.state == 'live';

if(input){
	var action = input.action;
	if(action == 'goLive'){
		event.setValue('drink_names_hidden','1');
		event.setValue('voting_open','1');
		event.setValue('state','live');
		event.update();

	}
	if(action == 'endLive'){
		event.setValue('drink_names_hidden','0');
		event.setValue('voting_open','0');
		event.setValue('state','completed');
		event.update();

	}
	if(action == 'toggleDrinkVisibility'){
		var toggleDrink = data.drink_names_hidden ? '0' : '1';
		event.setValue('drink_names_hidden',toggleDrink);
		event.update();
	}
	if(action == 'toggleVoting'){
		var toggleVote = data.voting_open ? '0' : '1';
		event.setValue('voting_open',toggleVote);
		event.update();
	}
}

var attendees = [];
var getAttendees = new GlideRecord('x_snc_commodore_0_club_event_attendances');
getAttendees.addQuery("event",event.sys_id);
getAttendees.query();
while(getAttendees.next()){
	var aObj = {};
	$sp.getRecordElements(aObj, getAttendees, 'user');
	var user = getAttendees.user;
	//console.log(user.sys_id.toString());
	var registration = new x_snc_commodore_0.CCUtils().getRegFromUser(user.sys_id.toString());
	//console.log(JSON.stringify(registration));
	aObj.status = registration.role.toString();
	//console.log(aObj.status);
	aObj.sys_id = getAttendees.getValue('sys_id');
	attendees.push(aObj);
}

//console.log('event id: '+data.event_id);
var b_list = new CCUtils().getBevRecords(data.event_id,true);
//console.log(b_list);
//console.log('b_list: '+b_list.toString());
var beverages = [];
var getBev = new GlideRecord('x_snc_commodore_0_beverage');
getBev.addEncodedQuery('sys_idIN'+b_list);
getBev.query();
while(getBev.next()){
	var bObj = {};
	$sp.getRecordElements(bObj, getBev, 'name,masked_name');
	bObj.sys_id = getBev.getValue('sys_id');
	bObj.votes = 0;
	beverages.push(bObj);
	//console.log('Found '+JSON.stringify(bObj));
}

var votes = [];
var getVotes = new GlideRecord('x_snc_commodore_0_votes');
getVotes.addQuery('event_attendances.event',event.sys_id);
getVotes.query();
data.vote_count = getVotes.getRowCount();
var top_score = 0;
while(getVotes.next()){
	var vObj = {};
	$sp.getRecordElements(vObj, getVotes, 'vote,user,beverage');
	vObj.beverage.masked_name = getVotes.beverage.masked_name.getDisplayValue(); 
	vObj.sys_id = getVotes.getValue('sys_id');
	if(getVotes.getValue('user')==gs.getUserID()){
		data.vote_msg = 'Modify Vote';
	}
	votes.push(vObj);
	var targetBeverage = beverages.findIndex(b => b.sys_id == vObj.beverage.value);
	if(targetBeverage != -1){
		beverages[targetBeverage].votes += 1;
		if(beverages[targetBeverage].votes > top_score){
			top_score = beverages[targetBeverage].votes;
		}
	}
}

data.attendees = attendees;
data.beverages = beverages;
data.bev_votes = [...beverages].sort((a,b) => b.votes - a.votes);
data.top_score = top_score;
data.votes = votes;

//console.log(data.beverages);
//console.log(data.bevVotes);
//console.log(data.votes);

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2023-01-26 16:09:09</sys_created_on>
        <sys_id>268d3fbe87e821106e4b11f83cbb35e6</sys_id>
        <sys_mod_count>224</sys_mod_count>
        <sys_name>CC Event Voting</sys_name>
        <sys_package display_value="Commodore's Club" source="x_snc_commodore_0">7f31176e87a021106e4b11f83cbb358d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Commodore's Club">7f31176e87a021106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sp_widget_268d3fbe87e821106e4b11f83cbb35e6</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2023-04-09 00:59:16</sys_updated_on>
        <template><![CDATA[<div>
  <div ng-if="data.auth" class="cc-panel">
    <button ng-click="toggleAction('goLive')" ng-if="!data.live" class="cc-button-primary cc-button">
      Go Live!
    </button>
    <button ng-click="toggleAction('endLive')" ng-if="data.live" class="cc-button-primary cc-button">
      End Live Event
    </button>
    <!--
    <button ng-click="toggleAction('toggleVoting')" class="cc-button-primary cc-button">
      <i class="ri-{{data.voting_open ? 'check' : 'close'}}-line"></i>Voting is {{data.voting_open ? 'open' : 'closed'}}
    </button>
	-->
  	<button ng-click="toggleAction('toggleDrinkVisibility')" class="cc-button-primary cc-button">
    	<i class="ri-eye{{data.drink_names_hidden ? '-close' : ''}}-fill"></i>
  		Drink names are {{data.drink_names_hidden ? 'hidden' : 'visible'}}
  	</button>
  </div>
  <div class="cc-panel">
    <!--
    <h3>Attendees</h3>
    <div ng-repeat="a in data.attendees">
    	<i class="ri-user{{a.status == 'founder' ? '-star' : ''}}-fill"></i>{{a.user.display_value}}
    </div>
  -->
  
  <div>    
    <div class="title-row">
      <h3>Scoreboard</h3>
      <div>
          <i class="ri-refresh-line" aria-hidden="true" title="${Last refreshed}"></i>
          <sn-time-ago timestamp="data.refreshed"/>
      </div>
    </div>
    <div class="cc-vote-panel">
      <div ng-repeat="bv in data.bev_votes track by $index">
        <div class="cc-vote-item">
          <div class="cc-vote-item-left">   
              <div class='cc-vote-info'><h4>{{data.drink_names_hidden ? bv.masked_name.display_value : bv.name.display_value}} - {{bv.votes}} vote{{bv.votes==1?'':'s'}}</h4></div>
              <!--<div style="display:block;background-color:red;width:{{votesToWidth(bv.votes,data.votes.length)}}%;height:10px;"></div>-->        
          </div>
          <div class="cc-vote-item-right"><h3 ng-if="bv.votes == data.top_score"><i class="ri-medal-fill"></i></h3></div>
        </div>
      </div>
      
    </div>
    <h4>{{data.vote_count}}/{{data.attendees.length}} votes cast</h4>
    <!--
  <div>
    <h3>Voting list</h3>
    <div>
    	<a href="{{data.vote_href}}" ng-if="data.voting_open" class="cc-button-primary cc-button">{{data.vote_msg}}</a>
    </div>
    Votes: {{data.vote_count}}
	<div ng-repeat="v in data.votes">
    	{{v.user.display_value}} voted for {{data.drink_names_hidden ? v.beverage.masked_name : v.beverage.display_value}}
      
    </div>
  </div>
	-->
</div>]]></template>
    </sp_widget>
</record_update>
