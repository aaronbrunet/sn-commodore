<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_commodore_0.CCUtils</api_name>
        <caller_access>1</caller_access>
        <client_callable>true</client_callable>
        <description/>
        <name>CCUtils</name>
        <script><![CDATA[var CCUtils = Class.create();
CCUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	getConstants: function(){
		var constants = {};
		constants.FOUNDER_GROUP = 'c220f0be87a021106e4b11f83cbb3513';
		constants.MEMBER_GROUP = 'f15074be87a021106e4b11f83cbb3534';
		constants.CAT_ITEM_VOTE = 'a065f70587e9a5104c1fc99d0ebb3547';
		constants.CAT_ITEM_BEVSIGNUP = '3f69a38587a9a5104c1fc99d0ebb359a';
		constants.CAT_ITEM_EVENTSIGNUP = '037fee2b871961104c1fc99d0ebb3534';
		constants.CAT_ITEM_JOINCLUB = 'dc8d6ee7871961104c1fc99d0ebb3544';
		
		constants.EVENT_EDIT = '/cc?id=form&table=x_snc_commodore_0_events&v=update_event&sys_id=';
		constants.BEV_EDIT = '/cc?id=form&table=x_snc_commodore_0_beverage&v=update_beverage&sys_id=';
		return constants;
	},
	getRegistrationCount: function(){
		var count = 0;
		var reg = new GlideRecord('x_snc_commodore_0_member_registration');
		reg.addActiveQuery();
		reg.query();
		count = reg.getRowCount();
		return count;
	},
	getFounderRegistrationCount: function(){
		var count = 0;
		var reg = new GlideRecord('x_snc_commodore_0_member_registration');
		reg.addQuery('role','founder');
		reg.addActiveQuery();
		reg.query();
		count = reg.getRowCount();
		return count;
	},
	getRegFromUser: function(user_sys_id) {
		gs.info(user_sys_id);
		var reg = new GlideRecord('x_snc_commodore_0_member_registration');
		reg.addQuery('user',user_sys_id);	
		reg.query();
		if(reg.next()){
			return reg;
		}
		return;
	},
	getAttendees: function(event_id){
		gs.info(event_id);
		var attendees = [];
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('state','approved');
		ea.query();
		while(ea.next()){
			attendees.push(ea.user);
		}
		return attendees;
	},
	getAttendeesID: function(event_id){
		var attendance = [];
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('state','approved');
		ea.query();
		if(ea.next()){
			attendance.push(ea.user.sys_id.toString());
		}
		return attendance;
	},	
	getMyRSVPRecord: function(user,event_id){
		var answer = null;
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('user',user);
		ea.query();
		if(ea.next()){
			answer = ea;
		}
		return answer;
	},
	getMyRSVPStatus: function(user,event_id){
		var answer = null;
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('user',user);
		ea.query();
		if(ea.next()){
			answer = {value: ea.state.toString(),label:ea.getDisplayValue('state')};
		}
		return answer;
	},	
	getMyRSVPEvents: function(user){
		var events = [];
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('user',user);
		ea.query();
		while(ea.next()){
			events.push(ea.event.sys_id.toString());
		}
		return events;
	},
	getAttendanceCapacity: function(event_id){
		var event = new GlideRecord('x_snc_commodore_0_events');
		event.get(event_id);
		if(event){
			return event.slots.toString();
		}
		return;
	},
	getBevCapacity: function(event_id){
		var event = new GlideRecord('x_snc_commodore_0_events');
		event.get(event_id);
		if(event){
			return event.beverage_count.toString();
		}
		return;
		
	},
	getBevRecords: function(event_id,state){
		//true = only look for approved records
		//false = all records
		gs.info('getBevRecords event_id: ' +event_id);
		var bevs = [];
		var ea = new GlideRecord('x_snc_commodore_0_beverage');
		ea.addQuery('event',event_id);
		if(state){
			ea.addQuery('state','approved');
		}
		ea.query();
		while(ea.next()){
			bevs.push(ea.sys_id.toString());
		}		
		return bevs;
	},
	getMyBev: function(user,event_id){
		gs.info(event_id);
		var bev = {};
		var ea = new GlideRecord('x_snc_commodore_0_beverage');
		ea.addQuery('event='+event_id);
		ea.addQuery('introduced_by',user);
		ea.query();
		if(ea.next()){
			bev.sys_id = ea.sys_id.toString();
		}
		return bev;
	},
	getBevVisible: function(event_id){
		gs.info(event_id);
		var answer = true;
		var event = new GlideRecord('x_snc_commodore_0_events');
		event.get(event_id);
		if(event){
			answer = event.drink_names_hidden;
		}
		return answer;		
	},
	getMyVote: function(user,event_attendance){
		var answer = null;
		var vote = new GlideRecord('x_snc_commodore_0_votes');
		vote.addQuery('user',user);
		vote.addQuery('event_attendances',event_attendance);
		vote.query();
		if(vote.next()){
			return vote.sys_id.toString();
		} else {
			return answer;
		}
	},
	getAttendanceAjax: function(){
		var event_id = this.getParameter('sysparm_event_id');
		var user_id = this.getParameter('sysparm_user_id');
		gs.info([event_id,user_id]);
		var attendance = '';
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('user',user_id);
		ea.query();
		if(ea.next()){
			attendance = ea.sys_id;
		}
		return attendance;
	},
	getSignupAjax: function(){
		var event_id = this.getParameter('sysparm_event_id');
		var user_id = this.getParameter('sysparm_user_id');
		gs.info([event_id,user_id]);
		var attendance = false;
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.addQuery('user',user_id);
		ea.query();
		if(ea.next()){
			attendance = true;
		}
		return attendance;
	},
	getAttendeesAjax: function(){
		var event_id = this.getParameter('sysparm_event_id');
		gs.info(event_id);
		
		var attendances = [];
		var ea = new GlideRecord('x_snc_commodore_0_club_event_attendances');
		ea.addQuery('event',event_id);
		ea.query();
		while(ea.next()){
			attendances.push(ea.sys_id);
		}
		return attendances.toString();
	},	
	getBevAjax: function(){
		var event_id = this.getParameter('sysparm_event_id');
		gs.info(event_id);
		
		var beverages = [];
		var eb = new GlideRecord('x_snc_commodore_0_beverage');
		eb.addQuery('event',event_id);
		eb.query();
		while(eb.next()){
			beverages.push(eb.sys_id);
		}
		return beverages.toString();
	},
    type: 'CCUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2023-01-31 21:56:49</sys_created_on>
        <sys_id>adfcb6ac8774a5104c1fc99d0ebb35e1</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>CCUtils</sys_name>
        <sys_package display_value="Commodore's Club" source="x_snc_commodore_0">7f31176e87a021106e4b11f83cbb358d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Commodore's Club">7f31176e87a021106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sys_script_include_adfcb6ac8774a5104c1fc99d0ebb35e1</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2023-04-10 01:08:48</sys_updated_on>
    </sys_script_include>
</record_update>
