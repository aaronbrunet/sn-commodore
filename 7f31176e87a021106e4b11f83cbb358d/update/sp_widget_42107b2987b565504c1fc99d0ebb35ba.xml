<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>other</category>
        <client_script><![CDATA[function client($scope, $animate, $rootScope, spUtil) {
  $scope.$watch("data.task", function() {
    $scope.task = $scope.data.task; // copy for shortcuts above
  })
	var c = this;
  	var data = c.data;
	spUtil.get("cc-event-card",{action:'cat_item',event_id:data.event.event_id,display:'list'}).then(function(response){
		c.eventWidget = response;
		$rootScope.$emit('approval_clear',data.all_clear);
		console.log('broadcasting approval_clear state: '+data.all_clear);

		if(c.data.exception_record){
			console.log('Exception record found: '+JSON.stringify(data.exception_record));
			$rootScope.$emit('exception_record',data.exception_record);
		}
	});
	//console.log('broadcasting ID '+value);
		

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.pre-wrap {&#13;
  white-space:pre-wrap;&#13;
}&#13;
&#13;
.options {&#13;
  display: inline-block;&#13;
}&#13;
&#13;
.timeline-badge.success {&#13;
	background-color: $cc-gold-dark;&#13;
}&#13;
&#13;
.approval-details {&#13;
	padding: 1.6rem 2.4rem;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cc-approval-record</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>CC Approval Record</name>
        <option_schema>[{"hint":"If true, the activity stream of the approval record will be shown. Else, the activity stream for the request record will be shown.","name":"use_approval_record_activity_stream","section":"Behavior","default_value":"false","label":"Use Approval Record Activity Stream","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	// g_approval_form_request is for approval summarizer ACLs
	// that let user read a record they need to approve. This global
	// variable is then deleted at the bottom of the script
	var constants = new x_snc_commodore_0.CCUtils().getConstants();
	var cat_rsvp = constants.CAT_ITEM_EVENTSIGNUP;
	var cat_bev = constants.CAT_ITEM_BEVSIGNUP;

	data.all_clear = true;

	g_approval_form_request = true;
	var gr = $sp.getRecord();
	if (gr == null || !gr.isValid()) {
		data.isValid = false;
		data.all_clear = false;
		return;
	}
	if (gr.getValue("approver") != gs.getUserID())
		data.approver = gr.approver.getDisplayValue();
	data.isValid = true;
	var task = getRecordBeingApproved(gr);
	if (task == null) {
		data.isValid = false;
		data.all_clear = false;
		return;
	}
	//console.log('state: '+gr.getValue('state'));
	data.approval_state = gr.getValue('state') == 'approved';

	var t = {};
	t = $sp.getFieldsObject(task, 'number,cat_item,short_description,opened_by,requested_by,start_date,end_date,quantity,price,recurring_price,recurring_frequency');
	
	t.table = task.getLabel();
	t.sys_id = task.getUniqueValue();
	if(t.cat_item.value == cat_rsvp){
		t.type = 'event';
	}
	if(t.cat_item.value == cat_bev){
		t.type = 'beverage';
	}
	data.details = getVarsFromRITM(t.sys_id);
	data.type = t.type;

	if(data.type == 'event'){
		//console.log(data.details);
		var event_choice = data.details.find(o => o.name == 'club_event');
		console.log(event_choice);
		var ref = getRefData(event_choice.table,event_choice.value);
		
		data.event = {
			event_id: ref.sys_id.toString(),
			slots: ref.slots.toString()

		};
		var attendees_curr_count = new CCUtils().getAttendeesID(data.event.event_id).length;
		data.event.attendees_curr_count = attendees_curr_count;
		data.all_clear = data.event.attendees_curr_count < data.event.slots;
		data.banner_msg = 'This event has available capacity and can be safely approved.';
		if(!data.all_clear){
			data.banner_msg = 'This event has reached capacity. Approval will increase the max capacity.';
			// data.exception_record = {
			// 	table: ,
			// 	record: data.event,
			// 	field: 'slots'
			// };
			data.exception_record = {
				table: event_choice.table,
				record: data.event,
				msg: data.banner_msg
			};
		}
		//var ref_table 
		//data.ref = getRefData(data.details.)
	}

	//console.log(data.details);

	var items = [];
	var idx = 0;
	var itemsGR = new GlideRecord("sc_req_item");
	itemsGR.addQuery("request", task.sys_id);
	itemsGR.query();
	while (itemsGR.next()) {
		//console.log(itemsGR);
	  var item = {};
	  item.name = itemsGR.name.toString();
	  item.short_description = itemsGR.short_description.toString();
	  if (itemsGR.getValue("price") > 0)
		  item.price = itemsGR.getDisplayValue("price");

	  if (itemsGR.getValue("recurring_price") > 0) {
		  item.recurring_price = itemsGR.getDisplayValue("recurring_price");
			item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
	  }

	  if (itemsGR) {
		  item.variables = new global.GlobalServiceCatalogUtil().getVariablesForTask(itemsGR, true);
		  item.variableSummarizerWidget = $sp.getWidget('sc-variable-summarizer', {'variables' : item.variables, 'toggle' : false, 'task': t.number.value});
		}
	  items[idx] = item;
	  idx++;
	}

	data.items = items;
	data.sys_id = gr.getUniqueValue();
	data.task = t;
	if (task) {
		data.variables = new global.GlobalServiceCatalogUtil().getVariablesForTask(task, true);		
		data.variableSummarizerWidget = $sp.getWidget('sc-variable-summarizer', {'variables' : data.variables, 'toggle' : true, 'task': t.number.value});
	}

	function getRefData(table,id){
		if(!table || !id){
			return;
		}
		var ref = new GlideRecord(table);
		ref.get(id);
		return ref;
	}

	function getVarsFromRITM(task_id){
		var ritm_data = [];
		var vars = new GlideRecord('sc_item_option_mtom');
		vars.addEncodedQuery('request_item.sys_id='+task_id);
		vars.query();
		while(vars.next()){
			var variable = {
				label: vars.sc_item_option.item_option_new.question_text.toString(),
				name: vars.sc_item_option.item_option_new.name.toString(),
				type: vars.sc_item_option.item_option_new.type.toString(),
				value: vars.sc_item_option.value.toString()			
			};
			if(variable.type=='8'){
				variable.table = vars.sc_item_option.item_option_new.reference.toString();
				//var ref = getRefData(variable.table,variable.value);
			}			
			
			ritm_data.push(variable);
		}
		return ritm_data;		
	}

	function getRecordBeingApproved(gr) {
		var approvalTargetRecord;
	  if (!gr.sysapproval.nil())
			approvalTargetRecord = gr.sysapproval.getRefRecord();
		else
			approvalTargetRecord = gr.document_id.getRefRecord();

		return (approvalTargetRecord.canRead()) ? approvalTargetRecord : null;
	}

	var ticketConversationOptions = {
		placeholder: gs.getMessage("Type your message here..."),
		placeholderNoEntries: gs.getMessage("Start a conversation..."),
		btnLabel: gs.getMessage("Send")
	};

	if (options.use_approval_record_activity_stream === true ||
			options.use_approval_record_activity_stream === "true") {
		ticketConversationOptions.sys_id = gr.getUniqueValue();
		ticketConversationOptions.table  = gr.getRecordClassName();
		ticketConversationOptions.title  = gs.getMessage("Activity Stream for Approval");
	} else {
		ticketConversationOptions.sys_id = task.getUniqueValue();
		ticketConversationOptions.table  = task.getRecordClassName();
		ticketConversationOptions.title  = gs.getMessage("Activity Stream for {0}", task.getLabel());
	}
	data.ticketConversation = $sp.getWidget('widget-ticket-conversation', ticketConversationOptions);
	delete g_approval_form_request;
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2023-03-25 21:15:07</sys_created_on>
        <sys_id>42107b2987b565504c1fc99d0ebb35ba</sys_id>
        <sys_mod_count>93</sys_mod_count>
        <sys_name>CC Approval Record</sys_name>
        <sys_package display_value="Commodore's Club" source="x_snc_commodore_0">7f31176e87a021106e4b11f83cbb358d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Commodore's Club">7f31176e87a021106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sp_widget_42107b2987b565504c1fc99d0ebb35ba</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2023-03-29 01:21:10</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.isValid">
  ${Record not found}
</div>
<div ng-if="data.isValid">
<div class="panel panel-{{::options.color}} b">
  <div class="panel-heading">
    <h2 class="panel-title">${Approval request for {{::task.number.display_value}}}</h2>
  </div>

  <div class="panel-body">
    <div ng-if="task.cat_item  && task.opened_by">New {{task.cat_item.display_value}} by {{::task.opened_by.display_value}}</div>
    <!--<div ng-if="task.short_description">{{task.short_description.display_value}}</div>-->
    <!--<div ng-if="task.opened_by"><label>${Opened by}</label> {{::task.opened_by.display_value}}</div>-->
    <div ng-if="task.requested_by"><label>${Requestor}</label> {{::task.requested_by.display_value}}</div>
    <div ng-if="::data.approver"><label>${Approver}</label> {{::data.approver}}</div>
    </div>
  	<div class="approval-details">
        <div ng-if="data.event">
          <h4>Event Details</h4>
          <div>
            <sp-widget widget="c.eventWidget"></sp-widget>
          </div>
          <h4 ng-if="!data.approval_state"><i class="ri-{{data.all_clear ? 'check' : 'close'}}-line"></i>{{data.event.attendees_curr_count}} attendees out of {{data.event.slots}} allowed</h4>
        </div>

        <div ng-if="data.items.length > 0">
          <h3 class="h4">${Items in this Request}</h3>
          <div ng-repeat="item in data.items">
            <h4>
              {{::item.short_description}}
            </h4>
            <div ng-if="item.price">${Price} {{::item.price}}
              <span ng-if="item.recurring_price">${Recurring price} {{::item.recurring_price}} {{::item.recurring_frequency}}</span>
            </div>
            <sp-widget ng-if="item.variableSummarizerWidget" widget="item.variableSummarizerWidget"></sp-widget>

          </div>
        </div>
		<div id="banners" ng-if="!data.approval_state">
          <div class="banner {{data.all_clear ? 'banner-success' : 'banner-warning'}}">
            <span>
              <i ng-if="!data.all_clear" class="ri-error-warning-fill"></i>
              <i ng-if="data.all_clear" class="ri-checkbox-circle-line"></i>
              {{data.banner_msg}}
            </span>
          </div>
        </div>
        <!--<sp-widget widget="data.variableSummarizerWidget"></sp-widget>-->
    </div>
    <sp-widget widget="data.ticketConversation"></sp-widget>
  	</div>
  
</div>]]></template>
    </sp_widget>
</record_update>
